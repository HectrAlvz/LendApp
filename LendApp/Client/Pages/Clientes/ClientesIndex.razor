@page "/clientes"
@using LendApp.Shared.Modelo
@inject HttpClient Http
@inject NavigationManager Navegar

<h3>Lista de Clientes</h3>
<button class="btn btn-primary" @onclick="AgregarCliente"><span class="oi oi-plus"></span> Nuevo Cliente</button>

@if (_losClientes == null)
{
    <h1>Cargando datos...</h1>
} else if (_losClientes.Count == 0)
{
    <h1>No existen Clientes registrados</h1>
} else
{
    <table class="table table-striped table-responsive table-hover w-auto">
        <thead>
        <tr>
            <th>Id</th>
            <th>Nombre</th>
            <th>Dirección</th>
            <th>Teléfono</th>
            <th>Fecha de registro</th>
            <th>Acciones</th>
        </tr>
        </thead>
        <tbody>
        @foreach (var elCliente in _losClientes)
        {
            <tr>
                <td>@elCliente.ClienteId</td>
                <td>@elCliente.NombreCompleto</td>
                <td>@elCliente.Direccion</td>
                <td>@elCliente.Telefono</td>
                <td>@elCliente.FechaRegistro.ToString("dd/MM/yyyy")</td>
                <td>
                    <button class="btn-sm btn-primary oi oi-pencil" @onclick="(() =>Modificar(elCliente.ClienteId))"></button>
                    <button class="btn-sm btn-danger oi oi-trash" @onclick="(() =>Eliminar(elCliente.ClienteId))"></button>
                </td>
            </tr>
        }
        </tbody>
    </table>
}

@code {
    private List<Cliente>? _losClientes;

    protected override async Task OnInitializedAsync()
    {
        _losClientes = await Http.GetFromJsonAsync<List<Cliente>>("api/Cliente");
    }

    private void AgregarCliente()
    {
        Navegar.NavigateTo("/clientes/nuevo");
    }

    private void Modificar(int id)
    {
        Navegar.NavigateTo($"/clientes/modificar/{id}");
    }

    private async Task Eliminar(int id)
    {
        await Http.DeleteAsync($"api/Cliente/{id}");
        _losClientes = await Http.GetFromJsonAsync<List<Cliente>>("api/Cliente");
    }
}
